package com.drkibitz.mark.common;import flash.display.Sprite;import flash.system.System;import flash.text.TextField;import flash.text.TextFormat;import flash.Lib;class Stats extends Sprite{    private var fpsTextField:TextField;    private var frameStartTime:Int = 0;    private var frameEndTime:Int = 0;    private var fpsList:Array <Float>;    private var memoryTextField:TextField;    public var realFps:Int = 0;    public var memoryUsage:Float = 0.0;    public function new()    {        super();        mouseChildren = false;        mouseEnabled = false;        fpsTextField = new TextField();        memoryTextField = new TextField();        fpsTextField.width = 90;        memoryTextField.width = 90;        addChild(fpsTextField);        fpsTextField.y = -2;        addChild(memoryTextField);        memoryTextField.y = 8;        graphics.beginFill(0x000000, 0.8);        graphics.drawRect(0, 0, 90, 24);        graphics.endFill();        fpsTextField.defaultTextFormat = new TextFormat("Arial", 10, 0xFFFFFF, true);        memoryTextField.defaultTextFormat = new TextFormat("Arial", 10, 0xFFFFFF, true);        fpsList = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];    }    public function start():Void    {        frameEndTime = frameStartTime;        frameStartTime = Lib.getTimer();    }    public function end():Void    {        var fps:Float = 1000 / (frameStartTime - frameEndTime);        fpsList.unshift(fps);        fpsList.pop();        var total:Float = 0;        var i:Int = 0;        var l:Int = fpsList.length;        while (i < l) {            total += fpsList[i];            i++;        }        realFps = Math.round(total / 20);        memoryUsage = (System.totalMemory / 1048576);        // only change this if within the display list        if (parent != null) {            fpsTextField.text = "FPS: " + realFps + "/" + stage.frameRate;            memoryTextField.text = "M: " + memoryUsage;        }    }}